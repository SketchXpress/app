.processingOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.25);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999; /* Increased z-index to be higher than anything else */
  backdrop-filter: blur(8px);
  animation: fadeIn 0.3s ease;
}

.processingContent {
  background: rgba(255, 255, 255, 0.95);
  border-radius: var(--border-radius-lg);
  padding: 40px;
  box-shadow: var(--shadow-lg), 0 0 0 1px rgba(255, 255, 255, 0.1);
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 320px;
  text-align: center;
  position: relative;
  overflow: hidden;
}

/* Colorful top accent bar */
.processingContent::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(90deg, var(--accent-cyan), var(--accent-magenta));
}

/* Improved spinner */
.spinnerContainer {
  margin-bottom: 24px;
  position: relative;
  width: 80px;
  height: 80px;
}

.spinner {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 3px solid transparent;
  border-top-color: var(--accent-cyan);
  border-right-color: var(--accent-magenta);
  animation: spin 1.5s linear infinite;
}

.spinnerInner {
  position: absolute;
  width: 70%;
  height: 70%;
  top: 15%;
  left: 15%;
  border-radius: 50%;
  border: 3px solid transparent;
  border-top-color: var(--accent-magenta);
  border-right-color: var(--accent-cyan);
  animation: spin 1s linear infinite reverse;
}

.processingTitle {
  font-size: 1.4rem;
  font-weight: 600;
  margin: 0 0 12px 0;
  background: linear-gradient(90deg, var(--accent-cyan), var(--accent-magenta));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.processingMessage {
  font-size: 1rem;
  color: var(--foreground);
  margin: 0 0 24px 0;
  line-height: 1.5;
  opacity: 0.8;
}

/* Improved progress bar */
.progressBar {
  width: 100%;
  height: 6px;
  background: rgba(0, 0, 0, 0.05);
  border-radius: 3px;
  overflow: hidden;
  position: relative;
}

.progressBarInner {
  height: 100%;
  background: linear-gradient(90deg, var(--accent-cyan), var(--accent-magenta));
  border-radius: 3px;
  position: relative;
  animation: shimmer 2s infinite;
}

/* Progress text */
.progressText {
  margin-top: 10px;
  font-size: 0.85rem;
  color: var(--foreground);
  opacity: 0.6;
}

/* Decorative particles */
.particles {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  overflow: hidden;
  pointer-events: none;
}

.particle {
  position: absolute;
  width: 8px;
  height: 8px;
  background: var(--accent-cyan);
  border-radius: 50%;
  opacity: 0.2;
  animation: float 3s infinite ease-in-out;
}

/* Add these animations to your existing keyframes or add them */
@keyframes shimmer {
  0% {
    opacity: 0.8;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.8;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) translateX(0);
    opacity: 0.2;
  }
  50% {
    transform: translateY(-20px) translateX(10px);
    opacity: 0.4;
  }
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .processingContent {
    width: 280px;
    padding: 30px;
  }
  
  .spinnerContainer {
    width: 60px;
    height: 60px;
    margin-bottom: 20px;
  }
  
  .processingTitle {
    font-size: 1.2rem;
  }
  
  .processingMessage {
    font-size: 0.9rem;
  }
}

/* Canvas area styling */
.canvasArea {
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(rgba(200, 200, 200, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(200, 200, 200, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
  background-position: center center;
}

/* Animations */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes progressAnimate {
  0% {
    transform: translateX(-100%);
  }
  50% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(-100%);
  }
}

/* Enhanced canvas tooltip */
.canvasTip {
  position: absolute;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 0.85rem;
  opacity: 0.8;
  transition: opacity 0.3s ease;
  pointer-events: none;
  white-space: nowrap;
  
  &:hover {
    opacity: 0;
  }
}

/* Subtle canvas border styling */
.canvasFrame {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  border: 1px solid rgba(0, 0, 0, 0.05);
  box-shadow: inset 0 0 40px rgba(0, 0, 0, 0.03);
  z-index: 10;
}
.canvasContainer {
  /* Use the CSS variable for height calculation instead of 100vh */
  height: calc((var(--vh, 1vh) * 100) - 60px);
  width: 100%;
  position: relative;
  overflow: hidden;
}

/* For mobile devices */
@media (max-width: 768px) {

  /* Mobile specific enhancement */
@media (max-width: 768px) {
  .processingOverlay {
    /* Ensure it's above all other components on mobile */
    z-index: 9999;
  }
}
  .canvasContainer {
    /* Fixed position on mobile */
    position: fixed;
    top: 60px;
    left: 0;
    right: 0;
    bottom: 0;
    /* Height calculation using the CSS variable */
    height: calc((var(--vh, 1vh) * 100) - 60px);
  }
  
  /* Create a class to apply to a div instead of targeting body directly */
  .preventScroll {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    width: 100%;
    height: 100%;
    z-index: -1; /* Place behind other content */
  }
}