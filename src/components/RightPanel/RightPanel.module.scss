@use '../../styles/shared/variables' as *;

// Component-specific variables
$text-muted: rgba(0, 0, 0, 0.6);
$background-panel: #FAFAFA;
$background-card: #FFFFFF;

// Panel-specific dimensions
$panel-width: 320px;
$panel-collapsed-width: 64px;
$mobile-panel-width: 280px;

.panel {
  display: flex;
  flex-direction: column;
  background: $background-panel;
  border-left: 1px solid rgba(0, 0, 0, 0.06);
  width: $panel-width;
  height: calc(100vh - #{layout(header-height)});
  position: sticky;
  top: layout(header-height);
  overflow-y: auto;
  z-index: 50;
  transition: width 0.25s cubic-bezier(0.4, 0, 0.2, 1), 
              transform 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: -1px 0 3px rgba(0, 0, 0, 0.03);
  font-family: "DM Sans", Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif !important;

  // Scrollbar styling
  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.15);
    border-radius: 3px;
    
    &:hover {
      background-color: rgba(0, 0, 0, 0.25);
    }
  }

  // Panel states
  &.collapsed {
    width: $panel-collapsed-width;

    .panelContent {
      padding: 1rem 0.5rem;
      align-items: center;
    }
  }

  // Tablet styling (Slide off-screen)
  &.tablet {
    position: fixed;
    right: 0;
    height: calc(100vh - #{layout(header-height)});
    z-index: 40;
    box-shadow: -2px 0 8px rgba(0, 0, 0, 0.08);
    border-radius: radius(xl) 0 0 radius(xl);

    &.collapsed {
      transform: translateX(100%);
      width: $panel-width;
    }
  }

  // Mobile styling (Slide from right with fixed width)
  &.mobile {
    position: fixed;
    top: layout(header-height);
    right: 0;
    bottom: 0;
    width: $mobile-panel-width;
    height: calc(100vh - #{layout(header-height)});
    background: var(--background);
    box-shadow: -5px 0 20px rgba(0, 0, 0, 0.15);
    z-index: 1000;
    transition: transform 0.25s ease;
    border-radius: radius(xl) 0 0 radius(xl);

    &.collapsed {
      transform: translateX(100%);
      box-shadow: none;
    }
  }
}

.panelContent {
  display: flex;
  flex-direction: column;
  padding: 1.25rem;
  height: 100%;
  gap: 2rem;
}

.section {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  position: relative;
  
  &:not(:first-child) {
    padding-top: 2rem;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -2rem;
      right: -2rem;
      height: 1px;
      background: rgba(0, 0, 0, 0.06);
    }
  }
}

.sectionTitle {
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: $text-muted;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.5rem;
}

.sectionIcon {
  color: var(--accent-cyan);
  opacity: 0.7;
  transition: transition(base);
}

.mobileToggle {
  position: fixed;
  top: calc(#{layout(header-height)} + 1rem);
  right: 1rem;
  width: 44px;
  height: 44px;
  border-radius: 50%;
  background: white;
  border: 1px solid rgba(0, 0, 0, 0.06);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1001;
  cursor: pointer;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
  transition: transition(base);

  svg {
    color: #000000;
    transition: transition(base);
  }

  &:hover {
    transform: scale(1.05);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
    background: var(--card-bg);
  }

  &:active {
    transform: scale(0.95);
  }
}

.collapseToggle {
  position: fixed;
  top: calc(#{layout(header-height)} + 1rem);
  right: $panel-width;
  width: 28px;
  height: 28px;
  background: $background-card;
  border: 1px solid rgba(0, 0, 0, 0.06);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 1001;
  box-shadow: shadow(sm);
  color: $text-muted;
  transition: right 0.25s cubic-bezier(0.4, 0, 0.2, 1), 
              background-color 0.2s ease,
              box-shadow 0.2s ease;

  &:hover {
    background: $background-card;
    box-shadow: shadow(md);
    color: var(--foreground);
    border-color: rgba(0, 0, 0, 0.08);
  }

  &.collapsed {
    right: $panel-collapsed-width;
  }
}

.collapsedButtons {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding-top: 0.5rem;
}

.iconButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border-radius: radius(lg);
  background: $background-card;
  border: 1px solid rgba(0, 0, 0, 0.06);
  color: var(--foreground);
  cursor: pointer;
  transition: transition(base);

  &:hover {
    background: $background-card;
    border-color: rgba(0, 0, 0, 0.08);
    transform: translateY(-1px);
    box-shadow: shadow(sm);
    color: var(--accent-cyan);
  }

  &:active {
    transform: translateY(0);
  }
}

.advancedParametersCard {
  background: $background-card;
  border-radius: radius(lg);
  border: 1px solid rgba(0, 0, 0, 0.06);
  overflow: hidden;
  box-shadow: shadow(xs);
  transition: transition(base);

  &:hover {
    box-shadow: shadow(sm);
  }
}

.cardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  border-bottom: 1px solid rgba(0, 0, 0, 0.06);
  background: transparent;
  cursor: pointer;
  user-select: none;
}

.cardTitle {
  display: flex;
  align-items: center;
  gap: 0.5rem;

  h3 {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--foreground);
    margin: 0;
  }
}

.cardIcon {
  color: var(--accent-cyan);
  opacity: 0.8;
}

.toggleAdvancedButton {
  width: 28px;
  height: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: radius(md);
  background: transparent;
  border: none;
  color: $text-muted;
  cursor: pointer;
  transition: transition(base);

  &:hover {
    background: rgba(0, 0, 0, 0.04);
    color: var(--accent-cyan);
  }
}

.cardContent {
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.paramSlider {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.paramHeader {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;

  label {
    font-size: 0.8125rem;
    font-weight: 500;
    color: var(--foreground);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}

.paramLabel {
  color: var(--foreground);
}

.paramValue {
  color: var(--accent-cyan);
  font-weight: 600;
}

.paramLabels {
  display: flex;
  justify-content: space-between;
  font-size: 0.6875rem;
  color: $text-muted;
}

.slider {
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  height: 4px;
  background: #E5E7EB;
  border-radius: 2px;
  outline: none;

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: var(--accent-cyan);
    cursor: pointer;
    transition: transition(base);
    box-shadow: shadow(sm);

    &:hover {
      transform: scale(1.1);
      box-shadow: 0 0 0 8px rgba(0, 183, 225, 0.1);
    }
  }

  &::-moz-range-thumb {
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: var(--accent-cyan);
    cursor: pointer;
    transition: transition(base);
    border: none;
    box-shadow: shadow(sm);

    &:hover {
      transform: scale(1.1);
      box-shadow: 0 0 0 8px rgba(0, 183, 225, 0.1);
    }
  }
}

.numImagesIndicator {
  display: flex;
  gap: 0.5rem;
  margin-top: 0.25rem;
}

.numBox {
  flex: 1;
  height: 4px;
  background: #E5E7EB;
  border-radius: 2px;
  transition: transition(base);

  &.active {
    background: var(--accent-cyan);
  }
}

.resetButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  margin-top: 0.5rem;
  font-size: 0.8125rem;
  font-weight: 500;
  color: $text-muted;
  background: transparent;
  border: 1px solid rgba(0, 0, 0, 0.06);
  border-radius: radius(md);
  cursor: pointer;
  transition: transition(base);

  &:hover {
    background: rgba(0, 0, 0, 0.02);
    border-color: rgba(0, 0, 0, 0.08);
    color: var(--foreground);
  }
}

// ===== Pool Section =====
.poolSection {
  margin-top: 0;
}

.poolBadge {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background: rgba(0, 183, 225, 0.06);
  border-radius: radius(md);
  font-size: 0.8125rem;
  color: var(--foreground);
  transition: transition(base);
  border: 1px solid rgba(0, 183, 225, 0.1);

  &:hover {
    background: rgba(0, 183, 225, 0.08);
    border-color: rgba(0, 183, 225, 0.15);
  }
}

.poolIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  background: white;
  border-radius: 50%;
  box-shadow: shadow(xs);
  color: var(--accent-cyan);
  flex-shrink: 0;
}

.poolName {
  flex: 1;
  font-weight: 500;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.clearPoolButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  background: transparent;
  border: none;
  border-radius: 50%;
  color: $text-muted;
  cursor: pointer;
  transition: transition(fast);

  &:hover {
    background: rgba(255, 59, 48, 0.08);
    color: #FF3B30;
  }
}

// ===== Images Gallery =====
.galleryHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.imageCount {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: 20px;
  height: 20px;
  padding: 0 0.25rem;
  background: rgba(0, 183, 225, 0.08);
  border-radius: 10px;
  font-size: 0.6875rem;
  font-weight: 600;
  color: var(--accent-cyan);
  margin-left: 0.25rem;
}

.toggleGallery {
  background: none;
  border: none;
  cursor: pointer;
  color: $text-muted;
  padding: 0.25rem;
  border-radius: radius(sm);
  transition: transition(fast);

  &:hover {
    background-color: rgba(0, 0, 0, 0.04);
    color: var(--foreground);
  }
}

.generatedImagesGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1rem;
}

.generatedImageCard {
  overflow: hidden;
  border-radius: radius(md);
  background: $background-card;
  border: 1px solid rgba(0, 0, 0, 0.06);
  transition: transition(base);
  cursor: pointer;
  position: relative;

  &:hover {
    transform: translateY(-2px);
    box-shadow: shadow(md);
    border-color: rgba(0, 183, 225, 0.2);
  }

  &.selected {
    border-color: var(--accent-cyan);
    box-shadow: 0 0 0 3px rgba(0, 183, 225, 0.08);
  }
}

.imageContainer {
  position: relative;
  aspect-ratio: 1/1;
  overflow: hidden;
  background-color: #F5F5F5;
}

.generatedImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);

  .generatedImageCard:hover & {
    transform: scale(1.03);
  }
}

.imageTitle {
  padding: 0.25rem 0.5rem;
  font-size: 0.6875rem;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: $text-muted;
  background: rgba(0, 0, 0, 0.02);
}

// ===== NFT Name Input =====
.nftNameInput {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  label {
    font-size: 0.8125rem;
    font-weight: 500;
    color: var(--foreground);
  }

  .inputField {
    padding: 0.5rem 1rem;
    border: 1px solid rgba(0, 0, 0, 0.06);
    border-radius: radius(md);
    font-size: 0.875rem;
    background: $background-card;
    color: var(--foreground);
    transition: transition(base);
    
    &:focus {
      outline: none;
      border-color: var(--accent-cyan);
      box-shadow: 0 0 0 3px rgba(0, 183, 225, 0.08);
    }
    
    &::placeholder {
      color: $text-muted;
      opacity: 0.7;
    }
  }

  .helperText {
    font-size: 0.6875rem;
    color: $text-muted;
    margin-top: -0.25rem;
  }
}

// ===== Action Buttons =====
.actionButtons {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 0.5rem;

  &.mobileActions {
    flex-direction: column;
  }
}

.actionButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  flex: 1;
  min-width: 0;
  padding: 0.5rem 1rem;
  font-size: 0.8125rem;
  font-weight: 500;
  background: $background-card;
  color: var(--foreground);
  border: 1px solid rgba(0, 0, 0, 0.06);
  border-radius: radius(md);
  cursor: pointer;
  transition: transition(base);

  &:hover:not(.disabled) {
    transform: translateY(-1px);
    box-shadow: shadow(sm);
    border-color: rgba(0, 0, 0, 0.08);
  }

  &:active:not(.disabled) {
    transform: translateY(0);
  }

  &.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    
    &:hover {
      transform: none;
      box-shadow: none;
    }
  }
}

.mintButton {
  border-radius: 10px; 
  background: linear-gradient(45deg, var(--accent-cyan), var(--accent-magenta));
  color: white;
  border: none;

  &:hover:not(.disabled) {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.25);
  }
}

.downloadButton {
  background: $background-card;
  border: 1px solid rgba(0, 0, 0, 0.06);

  &:hover:not(.disabled) {
    border-color: var(--accent-cyan);
    background: rgba(0, 183, 225, 0.04);
  }
}

.kidsMintButton {
  background: linear-gradient(135deg, #3ABFF8, #FBAE3C);
  color: white;
  border: none;
  position: relative;
  overflow: hidden;

  &:hover:not(.disabled) {
    background: linear-gradient(135deg, #34B0E6, #E89E36);
  }
}

.parentalStar {
  position: absolute;
  top: 4px;
  right: 6px;
  color: white;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.3));
  animation: twinkle 2s infinite alternate;
}

// ===== Error State =====
.errorSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding: 1.5rem;
  text-align: center;
  background: rgba(255, 59, 48, 0.05);
  border-radius: radius(lg);
  border: 1px solid rgba(255, 59, 48, 0.1);
}

.errorIcon {
  color: #FF3B30;
}

.errorText {
  font-size: 0.875rem;
  color: var(--foreground);
  line-height: 1.4;
  margin: 0;
}

// ===== Empty State =====
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  padding: 3rem 1.5rem;
  text-align: center;
  height: 100%;
  min-height: 300px;
}

.emptyStateIconWrapper {
  width: 64px;
  height: 64px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 183, 225, 0.08);
  border-radius: radius(xl);
}

.emptyStateIcon {
  color: var(--accent-cyan);
  opacity: 0.8;
}

.emptyStateText {
  font-size: 0.9375rem;
  font-weight: 500;
  color: var(--foreground);
  line-height: 1.4;
  max-width: 240px;
  margin: 0;
}

.emptyStateSubtext {
  font-size: 0.8125rem;
  color: $text-muted;
  margin: 0;
}

// ===== Overlay =====
.sidebarOverlay {
  position: fixed;
  top: layout(header-height);
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(2px);
  z-index: 999;
  animation: fadeIn 0.25s ease;
}

// ===== Animations =====
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes twinkle {
  from {
    opacity: 0.7;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1.1);
  }
}

.selectionHint {
  font-size: 0.75rem;
  color: #B91C1C; // Dark red text
  text-align: center;
  margin-top: 0.5rem;
  padding: 0.5rem;
  background: rgba(239, 68, 68, 0.06); // Light red background
  border-radius: radius(sm);
  border: 1px dashed rgba(239, 68, 68, 0.15); // Red dashed border
  font-weight: 500; // Make text slightly bolder for better visibility
}

// RESPONSIVE 

// Custom responsive mixins for this component
@mixin tablet {
  @media (max-width: 1024px) {
    @content;
  }
}

@mixin mobile {
  @media (max-width: 768px) {
    @content;
  }
}

@mixin small {
  @media (max-width: 480px) {
    @content;
  }
}

// ===== Responsive Adjustments =====

// Tablet styles
@include tablet {
  .panel {
    width: $panel-width;
  }

  .generatedImagesGrid {
    grid-template-columns: repeat(3, 1fr);
  }
}

// Mobile styles
@include mobile {
  .panel:not(.collapsed) {
    width: $mobile-panel-width;
    z-index: 1000;
  }

  .collapseToggle:not(.collapsed) {
    right: $mobile-panel-width;
  }

  .panelContent {
    padding: 1rem;
    gap: 1.5rem;
  }

  .section {
    &:not(:first-child) {
      padding-top: 1.5rem;
      
      &::before {
        left: -1rem;
        right: -1rem;
      }
    }
  }

  .cardContent {
    padding: 1rem;
    gap: 1rem;
  }

  .generatedImagesGrid {
    grid-template-columns: repeat(2, 1fr);
  }

  .actionButtons {
    flex-direction: column;
  }

  .actionButton {
    width: 100%;
  }
}

// Small mobile styles
@include small {
  .generatedImagesGrid {
    grid-template-columns: repeat(2, 1fr);
    gap: 0.5rem;
  }

  .panelContent {
    padding: 0.75rem;
    gap: 1rem;
  }

  .section {
    &:not(:first-child) {
      padding-top: 1rem;
    }
  }

  .cardContent {
    padding: 0.75rem;
  }
}

// Larger screens - show 3 columns in grid
@media (min-width: 360px) {
  .generatedImagesGrid {
    grid-template-columns: repeat(3, 1fr);
  }
}